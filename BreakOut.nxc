/*****************\
| Joseph  Dykstra |
| 09/25/2012      |
>*****************<
| Break Out       |
\*****************/

#include "+Highscore.nxc"

#define w   5
#define h   4
#define BMS 6 //Bouncer Max Speed
int BallX, BallY,  BouncerX, SpeedX, SpeedY, GameStatus, Level, angle=0, i=0, j=0; //Old Vars
int k, l, PreL, PreK, BouncerSpeed=0, Score, Lives, WaitTime=50,LBX,LBY; //New Vars
bool Block[w][h], Retry=true;
string msg; //debug messages
  
void MoveBall()
    {
    LBX=BallX; LBY=BallY;
    msg=StrCat(msg," WT=",NumToStr(WaitTime));
    msg=StrCat(msg," BX+SX=",NumToStr(BallX+SpeedX)," BY+SY=",NumToStr(BallY+SpeedY));
    PreK=k;
    PreL=l;
    BallX+=SpeedX;
    BallY+=SpeedY;
    if ((BallY<4)&&(BallX<(BouncerX+23))&&(BallX>BouncerX-3))
        {
        i=(SpeedX/abs(SpeedX));
        angle=BallX-BouncerX;
        msg=StrCat(msg," Angle=",NumToStr(angle),", i=",NumToStr(i));
        ///*
                      {SpeedX=-3;SpeedY=1;}   //0      |   Ball>o______<Bouncer|
        if (angle>0)  {SpeedX=-2;SpeedY=2;}   //123    |        _o_____        |
        if (angle>3)  {SpeedX=-1;SpeedY=3;}   //456    |        __o____        |
        if (angle>6)  {SpeedX=0;SpeedY=3;}    //789012 |        ___o___        |
        if (angle>12) {SpeedX=1;SpeedY=3;}    //345    |        ____o__        |
        if (angle>15) {SpeedX=2;SpeedY=2;}    //678    |        _____o_        |
        if (angle>18) {SpeedX=3;SpeedY=1;}    //9      |        ______o        |
        //*/
        //BallY*=-1;
        BallY=4;
        }
    if (BallY<0) {GameStatus=-1;}
         if (BallY>50) k=0;
    else if (BallY>40) k=1;
    else if (BallY>30) k=2;
    else               k=3;
         if (BallX<20) l=0;
    else if (BallX<40) l=1;
    else if (BallX<60) l=2;
    else if (BallX<80) l=3;
    else               l=4;
    msg=StrCat(msg," k=",NumToStr(k)," l=",NumToStr(l));
    if ((BallY>22)&&(Block[l][k]))
        {
        msg=StrCat(msg," BD");
        Block[l][k]=0;
        if (PreL!=l)  {SpeedX*=-1;}
        if (PreK!=k)  {SpeedY*=-1;}
        if ((PreK==k)
          &&(PreL==l)){SpeedY*=-1;}
        Score++;
        }
    if (BallX<4) {SpeedX*=-1;BallX=4;}
    if (BallX>96){SpeedX*=-1;BallX=96;}
    if (BallY>62){SpeedY*=-1;BallY=62;}
    }
    
void MoveBouncer()
    {
    if (ButtonPressed(BTNLEFT))      {BouncerSpeed-=1;}
    else if (ButtonPressed(BTNRIGHT)){BouncerSpeed+=1;}
    else                             {BouncerSpeed=0;}
    if (BouncerSpeed>BMS) {BouncerSpeed=BMS;}
    if (BouncerSpeed<-BMS){BouncerSpeed=-BMS;}
    msg=StrCat(msg," BCR=",NumToStr(BouncerSpeed));
    BouncerX+=BouncerSpeed;
    if (BouncerX>79){BouncerX=79;}
    if (BouncerX<0) {BouncerX=0;}
    SendResponseString(MAILBOX10,msg); //MoveBouncer() debugging messages
    }
    
void Draw()
    {
    ClearScreen();
    for (j=0;j<h;j++)
        {
        msg=StrCat(msg," ");
        for (i=0;i<w;i++)
            {
            if (Block[i][j])
                {
                RectOut(2+(i*20),52-(j*10),16,6,0);
                //msg=StrCat(msg,"Y");
                }
            else {/*msg=StrCat(msg,"N");*/}
        }   }
    CircleOut(BallX,BallY,3,0);
    if (WaitTime<30) CircleOut(LBX,LBY,3,0);
    LineOut(BouncerX,0,BouncerX+20,0,0);
    while (ButtonPressed(BTNCENTER)){}
    SendResponseString(MAILBOX10,msg); //MoveBall() and Draw() debugging messages
    }
    
bool RetryGame()
    {
    Score=( ((Level-1)*100) +(Score*5));
    if (Score>readHigh("BreakoutHigh.dat")) {writeHigh("BreakoutHigh.dat",Score);}
    TextOut(25,LCD_LINE4,"GAME OVER", 1);
    Wait(1500);
    msg=StrCat("S=",NumToStr(Score),", HS=",NumToStr(readHigh("BreakoutHigh.dat")));
    TextOut(25,LCD_LINE3,StrCat("Score: ",NumToStr(Score)),0);
    TextOut(10, LCD_LINE4,StrCat("HighScore: ",NumToStr(readHigh("BreakoutHigh.dat"))),0);
    TextOut(33,LCD_LINE7,"Retry?",0);
    ClearLine(LCD_LINE8);
    TextOut(0,LCD_LINE8,"Yes",0);
    TextOut(88,LCD_LINE8,"No",0);
    SendResponseString(MAILBOX10,msg); msg="";
    while (ButtonPressed(BTNLEFT)||ButtonPressed(BTNRIGHT)) {}
    until (ButtonPressed(BTNLEFT)||ButtonPressed(BTNRIGHT)) {}
    return (ButtonPressed(BTNLEFT));
    }
    
task main()
    {
    Level=1;
    while (Retry==true)
        {
        Score=0; Lives=3;
        while (Lives>0)
            {
            if (GameStatus==0) {for (j=0;j<h;j++) {for (i=0;i<w;i++) {Block[i][j]=(j<Level);}}}
            BallX=3;LBX=3;BallY=20;LBY=20;BouncerX=10;SpeedX=2;SpeedY=-2;GameStatus=1;BouncerSpeed=0;
            Draw();
            if (Lives!=1) {msg=StrCat("3        ",NumToStr(Lives)," Lives");}
            else          {msg=StrCat("3         ",NumToStr(Lives)," Life");}
            TextOut(0,LCD_LINE6,msg,0);
            for (i=3;i>0;i--) {TextOut(0,LCD_LINE6,NumToStr(i),0);Wait(1000);} //3-2-1 countdown
            while (GameStatus>0)
                {
                msg=""; //Reset Debug Stream
                GameStatus=0;
                for(j=0;j<h;j++) {for(i=0;i<w;i++) {GameStatus+=Block[i][j];}}
                MoveBouncer();
                MoveBall();
                Wait(WaitTime);
                Draw();
                Wait(WaitTime);
                }
            if (GameStatus==0) {Level++; Score=0;WaitTime=WaitTime*4/5;}
            if (GameStatus<0)  {Lives--;PlayTone(3000,500);}
            }
        if (GameStatus<0) {Retry=RetryGame();Level=1;}
        }
    }
