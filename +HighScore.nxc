//High Score Template
#include "+TextInput.nxc"
int fsize, handle;

int readHighscore(string readme)
  {
  int ARead = 0;
  int result = OpenFileRead(readme, fsize, handle);
  if (result == LDR_SUCCESS)
    {
    Read(handle, ARead);
    CloseFile(handle);
    }
  else
    {ARead = -1;}
  return ARead;
  }

void overwriteHighscore(string readme, int NewHighscore)
  {
  DeleteFile(readme);
  CreateFile(readme, 10, handle);
  Write(handle, NewHighscore);
  CloseFile(handle);
  }
/*
int readHighscoreHigh(string readme)
  {
  int ARead = 0;
  int result = OpenFileRead(readme, fsize, handle);
  if (result == LDR_SUCCESS)
    {
    Read(handle, ARead);
    CloseFile(handle);
    }
  else
    {ARead = -1;}
  return ARead;
  }
*/
string readHighscoreName(string readme)
  {
  string ARead = "";
  int result = OpenFileRead(readme, fsize, handle);
  if (result == LDR_SUCCESS)
    {
    Read(handle,ARead);
    Read(handle,ARead);
    CloseFile(handle);
    }
  else
    {ARead = "";}
  return ARead;
  }

void overwriteHighscoreName(string readme, int NewHighscore)
  {
  DeleteFile(readme);
  CreateFile(readme, 10, handle);
  Write(handle, NewHighscore);
  string temp=keyboard();
  Write(handle, temp);
  CloseFile(handle);
  }
  
//*
void endGame(string readme, int myscore)
  {
  TextOut(25,LCD_LINE4,"GAME OVER", 1);
  Wait(1000);
  if (myscore>readHighscore(readme))
    {overwriteHighscore(readme,myscore);
    string temp=keyboard();
    overwriteHighscoreName(readme,temp);}
  TextOut(0, LCD_LINE6,StrCat("S: ",NumToStr(myscore),", HS: ",NumToStr( readHighscore(readme) )),0);
  TextOut(0, LCD_LINE7,StrCat("N: ",readHighscoreName(readme)),0);
  while(1){}
  }
  

task main()
  {
  int score=0;
  bool playing=true;
  while (playing)
    {
    score=Random(100);
    playing=false;
    }
  endGame("High.dat",score);
  }
//*/
