//Scanner
//Joseph Dykstra
//01-21-2013

#include "Button+-.nxc"
//#define BEEP
#define OFFSET 9
#define DELTAOFFSET 0.95 //(0.97)
#define WAITTIME 19

#define DONTEXIT 0
#define EXITSOON 1
#define EXITNOW  2

#ifndef OFFSET
char OFFSET=2;
#endif
byte btnExitPressed=DONTEXIT;

byte setThreshold(int INthreshold)
  {
  while (!ButtonPressed(BTNCENTER) && btnExitPressed!=EXITNOW) //SET THRESHOLD
    {
    TextOut(30,56,"SCANNER",0);
    INthreshold=senseButton(INthreshold,true,5,100,true);
    TextOut(10,48,StrCat("Threshold: ",NumToStr(INthreshold),"  "),0);
    TextOut(34,32,"Scan",0);
    TextOut(10,20,"Direction",0);
    LineOut(75,15,90,30,0); //       \
    LineOut(10,30,90,30,0); // -------
    LineOut(75,45,90,30,0); //       /
    if (ButtonPressed(BTNEXIT))
      btnExitPressed=EXITNOW;
    }
  ClearScreen();
  return (INthreshold);
  }

void calibrate()
  {
#ifdef BEEP
  PlayTone(500,250);
#endif
  byte light,hi,lo;
  OnFwd(OUT_A,58); //Go slowly correct direction
  for (char xPos=99; xPos>=0; xPos--)
    {
    light=Sensor(IN_3);
    if (light<lo) lo=light;
    if (light>hi) hi=light;
    Wait(WAITTIME);
    }
  Off(OUT_A);
  //calibrate hi
  //calibrate lo
  }

void midScan(int INx, int INy, int INthreshold)
  {
  //NumOut(0,0,xPos,0x1000);
  byte light=Sensor(IN_3);
  //write light into text file
  //light=((INx+INy)%2)*100; //TEST
  PointOut(INx,INy,(light>INthreshold)*4);
  Wait(WAITTIME);
  if (ButtonPressed(BTNEXIT))
    btnExitPressed=EXITSOON;
#ifndef OFFSET
  OFFSET=senseButton(OFFSET,true,1,15,true);
#endif
  }

void scanLineFwd(int drawY, int INthreshold)
  {
#ifdef BEEP
  PlayTone(3000,250);
#endif
  OnFwd(OUT_A,58); //Go slowly correct direction
  float tempX;
  for (char xPos=99; xPos>=0; xPos--)
    {
    tempX = (xPos+OFFSET)*DELTAOFFSET;
    midScan(tempX,drawY,INthreshold);
    }
  if (btnExitPressed==EXITSOON) btnExitPressed=EXITNOW;
  Off(OUT_A);
  }

void scanLineRev(int drawY, int INthreshold)
  {
#ifdef BEEP
  //PlayTone(2000,250);
#endif
  OnRev(OUT_A,58); //Go slowly correct direction
  for (char xPos=0; xPos<=99; xPos++)
    midScan(xPos,drawY,INthreshold);
  Off(OUT_A);
  }
  
void moveScanner()
  {
#ifdef BEEP
  PlayTone(1000,250);
#endif
  while (ButtonPressed(BTNCENTER)){}
  OnRev(OUT_BC,30);
  Wait(50);
  Off(OUT_BC);
  while (ButtonPressed(BTNCENTER)){}
  if (ButtonPressed(BTNEXIT))
    btnExitPressed=EXITNOW;
  }

task main()
  {
  SetLongAbort(true);
  SetSensorLight(IN_3);
  //calibrate();
  byte threshold=50;
  while (btnExitPressed!=2) //REPEAT SCAN
    {
    threshold = setThreshold(threshold);
    for (byte yPos=63; yPos>0 && btnExitPressed!=EXITNOW; yPos--) //Y POSITION
      {
      if ((yPos%2)==0) scanLineFwd(yPos,threshold); //Ending
      else             scanLineRev(yPos,threshold); //Starting
      if (btnExitPressed==DONTEXIT) moveScanner();
#ifndef OFFSET
      TextOut(0,0,StrCat("offset: ",NumToStr(OFFSET),"  "),0);
#endif
      }
    until (ButtonPressed(BTNCENTER)||ButtonPressed(BTNEXIT)){}
    while (ButtonPressed(BTNCENTER)||ButtonPressed(BTNEXIT)){}
    Wait(100);
    }
  }
