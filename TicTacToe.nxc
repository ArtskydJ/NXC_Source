//Tic Tac Toe
//Joseph Dykstra
//9-25-2012


#include "+SoundEnd.nxc"


byte board[9], lastplayed, select, winner, a, b, i, aimove=0, xwins=0, owins=0, dwins=0;
bool gameover, turn, p2ai,aiturndone;
string msg;


void CheckWin()
  {
  winner=0;
  for (byte chk=1; chk<3; chk++)
    {
    if ((board[0]==chk&&board[1]==chk&&board[2]==chk)
     || (board[3]==chk&&board[4]==chk&&board[5]==chk)
     || (board[6]==chk&&board[7]==chk&&board[8]==chk)
     || (board[0]==chk&&board[3]==chk&&board[6]==chk)
     || (board[1]==chk&&board[4]==chk&&board[7]==chk)
     || (board[2]==chk&&board[5]==chk&&board[8]==chk)
     || (board[2]==chk&&board[4]==chk&&board[6]==chk)
     || (board[0]==chk&&board[4]==chk&&board[8]==chk))
      {winner=chk;}
    }
  msg=StrCat(msg,", CW=",NumToStr(winner));
  if (winner==1 || winner==2)
    {
    gameover=true;
    if (winner==1) {xwins+=1;}
    if (winner==2) {owins+=1;}
    }
  select=10;
  for (i=0; i<9&&select==10; i++)
    {
    if (board[i]==0)
      {select=i;}
    }
  if (select==10)
    {
    if (gameover==false) {dwins+=1;}
    gameover=true;
    msg=StrCat(msg,", GO");
    }
  if (gameover==false)
     {Wait(500);}
  SendResponseString(MAILBOX10,msg); msg="";
  }


void DEBUGredraw()
  {
  ClearScreen();
  TextOut(0,LCD_LINE1,NumToStr(board[0])+NumToStr(board[1])+NumToStr(board[2]),0);
  TextOut(0,LCD_LINE2,NumToStr(board[3])+NumToStr(board[4])+NumToStr(board[5]),0);
  TextOut(0,LCD_LINE3,NumToStr(board[6])+NumToStr(board[7])+NumToStr(board[8]),0);
  msg=StrCat(msg,", DR");
  SendResponseString(MAILBOX10,msg); msg="";
  }


void Redraw(bool dslct, byte pslct, bool odraw, bool cls)
  {
  if (cls) ClearScreen();
  LineOut(21,0,21,63,0); LineOut(42,0,42,63,0); //horizontal
  LineOut(0,21,63,21,0); LineOut(0,42,63,42,0); //vertical
  for (byte k=0; k<9;k++)
    {
    if (board[k]==1)
      {
      LineOut((k%3)*21+3, 60-((k/3)*21),
              (k%3)*21+18,45-((k/3)*21),0);
      LineOut((k%3)*21+3, 45-((k/3)*21),
              (k%3)*21+18,60-((k/3)*21),0);
      }
    if (board[k]==2)
      {
      CircleOut((k%3)*21+10,
             53-(k/3)*21,   8,0);
      }
    }
  TextOut(70,LCD_LINE1,"X: "+NumToStr(xwins),0);
  TextOut(70,LCD_LINE2,"O: "+NumToStr(owins),0);
  TextOut(70,LCD_LINE4,"D: "+NumToStr(dwins),0);
  if (dslct)
    {
    RectOut((pslct%3)*21+2,
         44-(pslct/3)*21,17,17,0);
    if (odraw==false)
      {
      LineOut((pslct%3)*21+3, 60-(pslct/3*21),
              (pslct%3)*21+18,45-(pslct/3*21),0);
      LineOut((pslct%3)*21+3, 45-(pslct/3*21),
              (pslct%3)*21+18,60-(pslct/3*21),0);
      }
    if (odraw==true)
      {
      CircleOut((pslct%3)*21+10,
             53-(pslct/3)*21,   8,0);
      }
    }
  }


void P(bool plyr)
  {
  if (gameover==false)
    {
    while (!ButtonPressed(BTNCENTER))
      {
      if (ButtonPressed(BTNLEFT)||ButtonPressed(BTNRIGHT))
        {
        if (ButtonPressed(BTNLEFT))
          {
          i=select;
          do{i=(i+8)%9;}until(board[i]==0)
          select=i;
          }
        if (ButtonPressed(BTNRIGHT))
          {
          i=select;
          do{i=(i+1)%9;}until(board[i]==0)
          select=i;
          }
        until (!ButtonPressed(BTNLEFT)&&!ButtonPressed(BTNRIGHT)){}
        }
      Redraw(true,select,plyr,true); //DEBUGredraw();
      Wait(50);
      }
    until (!ButtonPressed(BTNCENTER))
    board[select]=plyr+1;
    msg=StrCat(msg,", p",NumToStr(plyr),"=",NumToStr(select));
    Redraw(false,0,plyr,true); //DEBUGredraw();
    CheckWin();
    }
  }


void ChooseP2()
  {
  TextOut(16,LCD_LINE1,"TIC-TAC-TOE",0);
  TextOut(26,LCD_LINE7,"Players:",0);
  TextOut(16,LCD_LINE8,"1         2",0);
  until (ButtonPressed(BTNLEFT)
       ||ButtonPressed(BTNRIGHT)) {}
  p2ai  =ButtonPressed(BTNLEFT);
  until (ButtonPressed(BTNLEFT)==false
       &&ButtonPressed(BTNRIGHT)==false) {}
  }


void AI()
  {
  if (gameover==false)
    {
    msg=StrCat(msg,", AI");
    aimove=10; aiturndone=false;
    byte n1,n2,n3;
//*
    for (i=1; i<3; i++)
      {
      for (byte j=0; j<3; j++)
        {
        if      (j==0) {n1=0; n2=i; n3=i;}
        else if (j==1) {n1=i; n2=0; n3=i;}
        else if (j==2) {n1=i; n2=i; n3=0;}
        if (board[0]==n1 && board[1]==n2 && board[2]==n3) aimove=0+j;    //Horizontal
        if (board[3]==n1 && board[4]==n2 && board[5]==n3) aimove=3+j;    //Horizontal
        if (board[6]==n1 && board[7]==n2 && board[8]==n3) aimove=6+j;    //Horizontal
        if (board[0]==n1 && board[3]==n2 && board[6]==n3) aimove=0+j*3;  //Vertical
        if (board[1]==n1 && board[4]==n2 && board[7]==n3) aimove=1+j*3;  //Vertical
        if (board[2]==n1 && board[5]==n2 && board[8]==n3) aimove=2+j*3;  //Vertical
        if (board[2]==n1 && board[4]==n2 && board[6]==n3) aimove=2+j*2;  //Diagonal
        if (board[0]==n1 && board[4]==n2 && board[8]==n3) aimove=0+j*4;  //Diagonal
        }
      msg=StrCat(msg,", AImove=",NumToStr(aimove));
      }
//*/
/*
    for (i=1;i<3;i++)
      {//----------- 0 ------------ i ------------ i
      if ((board[0]==0)&&(board[1]==i)&&(board[2]==i)) aimove=0;
      if ((board[3]==0)&&(board[4]==i)&&(board[5]==i)) aimove=3;
      if ((board[6]==0)&&(board[7]==i)&&(board[8]==i)) aimove=6;
      if ((board[0]==0)&&(board[3]==i)&&(board[6]==i)) aimove=0;
      if ((board[1]==0)&&(board[4]==i)&&(board[7]==i)) aimove=1;
      if ((board[2]==0)&&(board[5]==i)&&(board[8]==i)) aimove=2;
      if ((board[2]==0)&&(board[4]==i)&&(board[6]==i)) aimove=2;
      if ((board[0]==0)&&(board[4]==i)&&(board[8]==i)) aimove=0;
      //------------ i ------------ 0 ------------ i
      if ((board[0]==i)&&(board[1]==0)&&(board[2]==i)) aimove=1;
      if ((board[3]==i)&&(board[4]==0)&&(board[5]==i)) aimove=4;
      if ((board[6]==i)&&(board[7]==0)&&(board[8]==i)) aimove=7;
      if ((board[0]==i)&&(board[3]==0)&&(board[6]==i)) aimove=3;
      if ((board[1]==i)&&(board[4]==0)&&(board[7]==i)) aimove=4;
      if ((board[2]==i)&&(board[5]==0)&&(board[8]==i)) aimove=5;
      if ((board[2]==i)&&(board[4]==0)&&(board[6]==i)) aimove=4;
      if ((board[0]==i)&&(board[4]==0)&&(board[8]==i)) aimove=4;
      //------------ i ------------ i ------------ 0
      if ((board[0]==i)&&(board[1]==i)&&(board[2]==0)) aimove=2;
      if ((board[3]==i)&&(board[4]==i)&&(board[5]==0)) aimove=5;
      if ((board[6]==i)&&(board[7]==i)&&(board[8]==0)) aimove=8;
      if ((board[0]==i)&&(board[3]==i)&&(board[6]==0)) aimove=6;
      if ((board[1]==i)&&(board[4]==i)&&(board[7]==0)) aimove=7;
      if ((board[2]==i)&&(board[5]==i)&&(board[8]==0)) aimove=8;
      if ((board[2]==i)&&(board[4]==i)&&(board[6]==0)) aimove=6;
      if ((board[0]==i)&&(board[4]==i)&&(board[8]==0)) aimove=8;
      msg=StrCat(msg,", AImove=",NumToStr(aimove));
      }
//*/
    if (aimove==10)
      {
      while (aimove==10)
        {
        i=(Random(11)*2); //0,2,4,6,8,10,12,14,16,18,20
        if      (i>17) i=Random(4)*2+1;
        else if (i>9)  i=4;
        if (board[i]==0)
          {aimove=i;}
        NumOut(0,0,i,0);
        }
      }
    msg=StrCat(msg,", AImove=",NumToStr(aimove));
    board[aimove]=2; //AI is always O=2, Player 1 is always X=1
    SendResponseString(MAILBOX10,msg); msg="";
    Redraw(false,0,0,true); //DEBUGredraw();
    CheckWin();
    }
  }


void GameOver()
  {
  if (winner==0) {SoundEnd(soundDraw);TextOut(40,LCD_LINE5,"Draw",0);}
  else
    {
    if (p2ai&&winner==2) {TextOut(32,LCD_LINE5,"AI won",0); SoundEnd(soundLose);}
    else {TextOut(12,LCD_LINE5,"Player "+NumToStr(winner)+" won",0); SoundEnd(soundWin);}
    }
  Redraw(false,0,0,true);
  Wait(3000);
  ClearScreen();
  TextOut(16,LCD_LINE1,"TIC-TAC-TOE",0); TextOut(22,LCD_LINE4,"GAME OVER",0);
  TextOut(45,LCD_LINE8,"OK",0);
  until (ButtonPressed(BTNCENTER)) {}
  ClearScreen();
  until (ButtonPressed(BTNCENTER)==false) {}
  }


task main()
  {
  ChooseP2();
  for (byte alt=0;true;alt++)
    {
    gameover=false; turn=0; select=0;
    for (i=0; i<9; i++) {board[i]=0;}
    while (gameover==false)
      {
      if (p2ai)
        {
        if (alt%2)
          {AI(); P(0);}
        else
          {P(0); AI();}
        }
      else
        {
        P((alt+0)%2);
        P((alt+1)%2);
        }
      }
    GameOver();
    }
  }


      /*
      {//----------- 0 ------------ i ------------ i
      if ((board[0]==0)&&(board[1]==i)&&(board[2]==i)) {aiturndone=true; aimove=0;}
      if ((board[3]==0)&&(board[4]==i)&&(board[5]==i)) {aiturndone=true; aimove=3;}
      if ((board[6]==0)&&(board[7]==i)&&(board[8]==i)) {aiturndone=true; aimove=6;}
      if ((board[0]==0)&&(board[3]==i)&&(board[6]==i)) {aiturndone=true; aimove=0;}
      if ((board[1]==0)&&(board[4]==i)&&(board[7]==i)) {aiturndone=true; aimove=1;}
      if ((board[2]==0)&&(board[5]==i)&&(board[8]==i)) {aiturndone=true; aimove=2;}
      if ((board[2]==0)&&(board[4]==i)&&(board[6]==i)) {aiturndone=true; aimove=2;}
      if ((board[0]==0)&&(board[4]==i)&&(board[8]==i)) {aiturndone=true; aimove=0;}
      //------------ i ------------ 0 ------------ i
      if ((board[0]==i)&&(board[1]==0)&&(board[2]==i)) {aiturndone=true; aimove=1;}
      if ((board[3]==i)&&(board[4]==0)&&(board[5]==i)) {aiturndone=true; aimove=4;}
      if ((board[6]==i)&&(board[7]==0)&&(board[8]==i)) {aiturndone=true; aimove=7;}
      if ((board[0]==i)&&(board[3]==0)&&(board[6]==i)) {aiturndone=true; aimove=3;}
      if ((board[1]==i)&&(board[4]==0)&&(board[7]==i)) {aiturndone=true; aimove=4;}
      if ((board[2]==i)&&(board[5]==0)&&(board[8]==i)) {aiturndone=true; aimove=5;}
      if ((board[2]==i)&&(board[4]==0)&&(board[6]==i)) {aiturndone=true; aimove=4;}
      if ((board[0]==i)&&(board[4]==0)&&(board[8]==i)) {aiturndone=true; aimove=4;}
      //------------ i ------------ i ------------ 0
      if ((board[0]==i)&&(board[1]==i)&&(board[2]==0)) {aiturndone=true; aimove=2;}
      if ((board[3]==i)&&(board[4]==i)&&(board[5]==0)) {aiturndone=true; aimove=5;}
      if ((board[6]==i)&&(board[7]==i)&&(board[8]==0)) {aiturndone=true; aimove=8;}
      if ((board[0]==i)&&(board[3]==i)&&(board[6]==0)) {aiturndone=true; aimove=6;}
      if ((board[1]==i)&&(board[4]==i)&&(board[7]==0)) {aiturndone=true; aimove=7;}
      if ((board[2]==i)&&(board[5]==i)&&(board[8]==0)) {aiturndone=true; aimove=8;}
      if ((board[2]==i)&&(board[4]==i)&&(board[6]==0)) {aiturndone=true; aimove=6;}
      if ((board[0]==i)&&(board[4]==i)&&(board[8]==0)) {aiturndone=true; aimove=8;}
      */
